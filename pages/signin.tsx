import { Avatar, Box, Button, Container, CssBaseline, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Typography } from "@mui/material";
import Head from "next/head";
import { useEffect, useState } from 'react'
import Image from "next/image";
import Link from "next/link";
import { GiSoccerBall } from "react-icons/gi";
import Banner from "../assets/images/Banner.png";
import { AiFillLock } from "react-icons/ai";
import axios from "axios";
import { User } from "../Models";
import { toast } from "react-toastify";
import Router, { useRouter } from "next/router";
import { signIn, useSession } from "next-auth/react";
import { NextPage } from "next";
import { setCookies  } from 'cookies-next';
import jwt from 'jsonwebtoken'

interface State {
  email: string
  password: string
  users: User[]
}

const Signin: NextPage = (): JSX.Element => {
  const [state, setState] = useState<State>({
    email: "",
    password: "",
    users: []
  })
  const { users, email, password } = state



  useEffect(() => {
    axios.get("/api/users")
      .then(res => res.data)
      .then((data) => {
        setState({ ...state, users: data.users })
      })
  }, [])


  const handleSubmit = async (e: any) => {
    e.preventDefault()
    const user: User | undefined = users.find(user => user.email === email)

    if (!email && !password) {
      toast.info("Vui lòng nhập email & password", { autoClose: 3000, theme: "colored" })
    } else if (!email) {
      toast.info("Vui lòng nhập email", { autoClose: 3000, theme: "colored" })
    } else if (!password) {
      toast.info("Vui lòng nhập password", { autoClose: 3000, theme: "colored" })
    } else if (!user) {
      toast.info("Email không tồn tại", { autoClose: 3000, theme: "colored" })
    } else if (user && user.password !== password) {
      toast.info("Password không chính xác", { autoClose: 3000, theme: "colored" })
    } else {
      const { data } = await axios.post('/api/login', { id : user.id})
      setCookies('token', data.token, { maxAge: 60 * 6 * 24 });
      Router.push("/")
    }
  }


  return (
    <>
      <Head>
        <title>Signin - Sport Yard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/goal.png" />
      </Head>
      <div className="h-screen bg-gray-100 overflow-hidden">
        <Grid container spacing={2}>
          <Grid item xs={12} md={12} lg={6}>
            <Container component="main" maxWidth="xs">
              <CssBaseline />
              <Box
                sx={{
                  marginTop: 8,
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                }}
              >
                <Link href="/" passHref>
                  <Grid className="group cursor-pointer" container justifyContent={"center"} alignItems={"center"}>
                    <Grid className="lg:block hidden" item xs={0} md={0} lg={3}>
                     <Image src={require("../assets/images/goal.png")} />
                    </Grid>
                    <Grid item xs={0} md={12} lg={6}>
                      <Typography fontSize={30} className="  text-primary" variant="body2" component="main">
                        Sport Yard
                      </Typography>
                    </Grid>
                  </Grid>
                </Link>

                <Avatar
                  className="bg-primary"
                  sx={{ m: 1 }}>
                  <AiFillLock
                  />
                </Avatar>
                <Typography
                  component="h1" variant="h5">
                  Sign in
                </Typography>
                <Box component="form" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>
                  <Grid container spacing={2}>
                    <Grid item xs={12}>
                      <TextField
                        required
                        value={email}
                        onChange={e => setState({ ...state, email: e.target.value })}
                        fullWidth
                        id="email"
                        label="Email Address"
                        name="email"
                        autoComplete="email"
                      />
                    </Grid>
                    <Grid item xs={12}>
                      <TextField
                        value={password}
                        onChange={e => setState({ ...state, password: e.target.value })}
                        required
                        fullWidth
                        name="password"
                        label="Password"
                        type="password"
                        id="password"
                        autoComplete="new-password"
                      />
                    </Grid>
                  </Grid>
                  <Button
                    className="bg-[#1976dE]"
                    type="submit"
                    fullWidth
                    variant="contained"
                    sx={{ mt: 3, mb: 2 }}
                  >
                    Sign in
                  </Button>
                  <Grid container justifyContent="flex-end">
                    <Grid item>
                      <Grid container columnGap={1} alignItems={"center"}>
                        <Grid item>
                          <Typography variant="body1" component="h6">
                            Don`t have an account
                          </Typography>
                        </Grid>
                        <Grid item>
                          <Link href="/signup">
                            <a className="text-[#1976dE] font-semibold">
                              ? Signup
                            </a>
                          </Link>
                        </Grid>
                      </Grid>
                    </Grid>
                  </Grid>
                </Box>
              </Box>
            </Container>
          </Grid>
          <Grid className="lg:block hidden" item xs={0} md={0} lg={6}>
            <Image
              className="lg:translate-y-[-10rem] h-[10rem]"
              alt="Banner"
              src={Banner}
              layout="intrinsic"
              objectFit="cover"
            />
          </Grid>
        </Grid>
      </div>
    </>
  );
};

export default Signin;
